{"version":3,"sources":["webpack://hath-metrics-workers/webpack/universalModuleDefinition","webpack://hath-metrics-workers/./src/handler.js","webpack://hath-metrics-workers/./src/hath.js","webpack://hath-metrics-workers/./src/helper.js","webpack://hath-metrics-workers/./src/prometheus.js","webpack://hath-metrics-workers/webpack/bootstrap","webpack://hath-metrics-workers/webpack/runtime/define property getters","webpack://hath-metrics-workers/webpack/runtime/hasOwnProperty shorthand","webpack://hath-metrics-workers/webpack/runtime/make namespace object","webpack://hath-metrics-workers/./src/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;ACV0C;AACN;AACL;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,wDAAiB;;AAExC;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA,uBAAuB,wDAAiB;;AAExC;AACA;AACA,wBAAwB;AACxB;AACA,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,wDAAY;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,gBAAgB,sDAAU;AAC1B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,sDAAU;AAC1B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,sDAAU;AAC1B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,sDAAU;AAC1B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,sDAAU;AAC1B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC,SAAS;AACT,KAAK;AACL;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,cAAc;AACxD,KAAK;AACL;AACA;AACA;AACA,yBAAyB,8CAAS;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/JoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,qCAAqC,eAAe,iBAAiB,eAAe;AACpF,SAAS;AACT;AACA,KAAK;;AAEL;AACA,kBAAkB,8CAAS;AAC3B,KAAK;AACL;AACA,kBAAkB,8CAAS;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,8CAAS;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;;;;;;;;;;;;;;;AC5IO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNA;;AAEA,6BAA6B,0BAA0B;AACvD,0BAA0B,KAAK,GAAG;AAClC,SAAS,KAAK,GAAG;AACjB,EAAE,KAAK,EAAE,qBAAqB,GAAG,kBAAkB;AACnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,EAAE,IAAI,wCAAwC;AAC9D;AACA,aAAa,EAAE,GAAG;AAClB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,kBAAkB,MAAM;AACxB;AACA;;AAEA,iEAAe;AACf;AACA;AACA,CAAC;;;;;;;UC3CD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;ACNyC;;AAEzC;AACA,sBAAsB,uDAAa;AACnC,CAAC","file":"worker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","import { fetchHomePageData } from './hath'\nimport { HttpError } from './helper'\nimport prom from './prometheus'\n\nasync function getEhCookie(request) {\n    const headers = request.headers\n    const ipb = {\n        id: headers.get('ipb_id') || globalThis.IPB_MEMBER_ID,\n        pass_hash: headers.get('ipb_pass_hash') || globalThis.IPB_PASS_HASH,\n    }\n    return ipb\n}\n\nasync function handleMetricsJson(request) {\n    const ipb = await getEhCookie(request)\n    const data = await fetchHomePageData(ipb.id, ipb.pass_hash)\n\n    return new Response(JSON.stringify(data), {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n}\n\nasync function handleMetricsPrometheus(request) {\n    const ipb = await getEhCookie(request)\n    const data = await fetchHomePageData(ipb.id, ipb.pass_hash)\n\n    let metrics = []\n    for (const r of data.regions) {\n        const labels = { region: r.name.toLowerCase() }\n        metrics.push(\n            prom.Gauge({\n                name: 'hath_region_load',\n                help: 'region load (MB/s)',\n                val: r.load,\n                labels: labels,\n            }),\n            prom.Gauge({\n                name: 'hath_region_miss',\n                help: 'region miss (%)',\n                val: r.miss,\n                labels: labels,\n            }),\n            prom.Gauge({\n                name: 'hath_region_coverage',\n                help: 'region coverage',\n                val: r.coverage,\n                labels: labels,\n            }),\n            prom.Gauge({\n                name: 'hath_region_hits',\n                help: 'region hits',\n                val: r.hits,\n                labels: labels,\n            }),\n            prom.Gauge({\n                name: 'hath_region_quality',\n                help: 'region quality',\n                val: r.quality,\n                labels: labels,\n            }),\n        )\n    }\n\n    for (const c of data.clients) {\n        const labels = {\n            name: c.name,\n            id: c.id,\n            country: c.country,\n        }\n        metrics.push(\n            prom.Gauge({\n                name: 'hath_client_status',\n                help: 'client status 1 online, 0 offline',\n                val: c.status === 'online' ? 1 : 0,\n                labels: labels,\n            }),\n            prom.Gauge({\n                name: 'hath_client_created',\n                help: 'client created time (timestamp in ms)',\n                val: new Date(c.created).getTime(),\n                labels: labels,\n            }),\n            prom.Counter({\n                name: 'hath_client_file_served_total',\n                help: 'client total served file',\n                val: c.file_served,\n                labels: labels,\n            }),\n        )\n\n        if (c.status === 'online') {\n            metrics.push(\n                prom.Gauge({\n                    name: 'hath_client_max_speed',\n                    help: 'client max speed (KB/s)',\n                    val: c.max_speed,\n                    labels: labels,\n                }),\n                prom.Gauge({\n                    name: 'hath_client_trust',\n                    help: 'client trust',\n                    val: c.trust,\n                    labels: labels,\n                }),\n                prom.Gauge({\n                    name: 'hath_client_quality',\n                    help: 'client quality',\n                    val: c.quality,\n                    labels: labels,\n                }),\n                prom.Gauge({\n                    name: 'hath_client_hit_rate',\n                    help: 'client hit rate (min)',\n                    val: c.hit_rate,\n                    labels: labels,\n                }),\n                prom.Gauge({\n                    name: 'hath_client_hath_rate',\n                    help: 'client hath rate (day)',\n                    val: c.hath_rate,\n                    labels: labels,\n                }),\n            )\n        }\n    }\n\n    return new Response(metrics.join('\\n'), {\n        headers: {\n            'Content-Type': 'text/plain; version=0.0.4',\n        },\n    })\n}\n\nexport async function handleRequest(request) {\n    try {\n        const pathname = new URL(request.url).pathname.toLowerCase()\n\n        if (pathname === '/metrics') {\n            return handleMetricsPrometheus(request)\n        }\n        if (pathname === '/metrics-raw') {\n            return handleMetricsJson(request)\n        }\n\n        return new Response('not found', { status: 404 })\n    } catch (e) {\n        let opt = {\n            status: 500,\n        }\n        if (e instanceof HttpError) {\n            opt.status = e.code\n            opt.statusText = e.message\n        } else {\n            console.log('handleRequest failed', e)\n        }\n        return new Response(null, opt)\n    }\n}\n","import { HttpError } from './helper'\n\nclass TableContext {\n    constructor(index) {\n        this.tableIndex = index\n        this.tableCount = 0\n        this.tr = []\n    }\n\n    _checkTable() {\n        return this.tableIndex === this.tableCount - 1\n    }\n\n    element(el) {\n        if (el.tagName === 'table') {\n            this.tableCount++\n        }\n    }\n\n    newTr() {\n        if (!this._checkTable()) {\n            return\n        }\n        this.tr.push([])\n    }\n\n    newTd() {\n        if (!this._checkTable()) {\n            return\n        }\n        this.tr[this.tr.length - 1].push('')\n    }\n\n    appendTdText(text) {\n        if (!this._checkTable()) {\n            return\n        }\n        const tr = this.tr[this.tr.length - 1]\n        const i = tr.length - 1\n        tr[i] += text\n    }\n}\n\nclass TrHandler {\n    constructor(ctx) {\n        this.ctx = ctx\n    }\n\n    element(el) {\n        this.ctx.newTr()\n    }\n}\n\nclass TdHandler {\n    constructor(ctx) {\n        this.ctx = ctx\n    }\n\n    element(el) {\n        this.ctx.newTd()\n    }\n\n    text(t) {\n        this.ctx.appendTdText(t.text)\n    }\n}\n\nexport async function fetchHomePageData(ipb_member_id, ipb_pass_hash) {\n    const resp = await fetch('https://e-hentai.org/hentaiathome.php', {\n        headers: {\n            Cookie: `ipb_member_id=${ipb_member_id}; ipb_pass_hash=${ipb_pass_hash};`,\n        },\n        redirect: 'manual',\n    })\n\n    if (resp.status >= 400) {\n        throw new HttpError(resp.status, resp.statusText)\n    } else if (resp.status === 302) {\n        //login page\n        throw new HttpError(401, 'login failed')\n    }\n\n    const regionsCtx = new TableContext(0)\n    const clientsCtx = new TableContext(0)\n    const text = await new HTMLRewriter()\n        .on('table', regionsCtx)\n        .on('table>tr', new TrHandler(regionsCtx))\n        .on('table>tr>td', new TdHandler(regionsCtx))\n        .on('table.hct', clientsCtx)\n        .on('table.hct>tr', new TrHandler(clientsCtx))\n        .on('table.hct>tr>td', new TdHandler(clientsCtx))\n        .transform(resp)\n        .text()\n\n    if (text.includes('Your IP address has been temporarily')) {\n        throw new HttpError(403, text)\n    }\n\n    let regions = []\n    regionsCtx.tr.shift()\n    for (const tr of regionsCtx.tr) {\n        const region = {\n            name: tr[0],\n            load: +tr[3].replace(' MB/s', ''),\n            miss: +tr[4].replace(' %', ''),\n            coverage: +tr[5],\n            hits: +tr[6],\n            quality: +tr[7],\n        }\n        regions.push(region)\n    }\n\n    let clients = []\n    clientsCtx.tr.shift()\n    for (const tr of clientsCtx.tr) {\n        const client = {\n            name: tr[0],\n            id: +tr[1],\n            status: tr[2].toLowerCase(),\n            created: tr[3],\n            last_seen: tr[4],\n            file_served: +tr[5].replaceAll(',', ''),\n        }\n\n        if (client.status === 'online') {\n            client.ip = tr[6]\n            client.port = +tr[7]\n            client.versin = tr[8]\n            client.max_speed = +tr[9].replace(' KB/s', '')\n            client.trust = +tr[10]\n            client.quality = +tr[11]\n            client.hit_rate = +tr[12].replace(' / min', '')\n            client.hath_rate = +tr[13].replace(' / day', '')\n            client.country = tr[14]\n        }\n\n        clients.push(client)\n    }\n\n    return { regions, clients }\n}\n","export class HttpError extends Error {\n    constructor(code, ...args) {\n        super(...args)\n        this.code = code\n        Error.captureStackTrace(this, HttpError)\n    }\n}\n","// https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md\n\nfunction formatMetric(type, { name, help, val, labels }) {\n    const fmt = `# HELP ${name} ${help}\n# TYPE ${name} ${type}\n${name}${formatLabels(labels)} ${resolveValue(val)}`\n    return fmt\n}\n\nfunction formatLabels(labels) {\n    if (!labels) {\n        return ''\n    }\n\n    const entires = Object.entries(labels)\n    if (entires.length === 0) {\n        return ''\n    }\n\n    let s = ''\n    for (const [k, v] of entires) {\n        s += `${k}=\"${String(v).replace(/([\"\\n\\\\])/g, '\\\\$1')}\",`\n    }\n    return `{${s}}`\n}\n\nfunction resolveValue(value) {\n    if (Number.isNaN(value)) {\n        return 'Nan'\n    } else if (!Number.isFinite(value)) {\n        if (value < 0) {\n            return '-Inf'\n        } else {\n            return '+Inf'\n        }\n    } else {\n        return `${value}`\n    }\n}\n\nexport default {\n    Counter: (...args) => formatMetric('counter', ...args),\n    Gauge: (...args) => formatMetric('gauge', ...args),\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { handleRequest } from './handler'\n\naddEventListener('fetch', (event) => {\n    event.respondWith(handleRequest(event.request))\n})\n"],"sourceRoot":""}